* Material UI
** Container
** Box
** sx
* Localizing the app
** Resources
https://developer.mozilla.org/en-US/docs/Glossary/Locale
** Detect the user's locale
https://stackoverflow.com/questions/673905/how-to-determine-users-locale-within-browser

The stack overflow article suggests that the most reliable method for detecting a user's prefered language is
to read the <Accept-Language> Http header.

However MDN supports that newer browser versions offer the same functionality.
https://developer.mozilla.org/en-US/docs/Web/API/Navigator/languages

** Translate typography elements
** Server locale-specific content such as dates, currencies and numbers
- Dates
    - Day names
    - Day name format
    - Month names
    - Month name format
    - Time format
- Currencies
    - Value
    - Symbol
- Numbers
    - Decimal points

** Flow
Enter Site -> (detect users locale) -> (store the locale to be offered, in a Cookie or somehing) -> render app

Attach listener to browser settings change
Fire event when user clicks on locale offered

User selects another language -> (store the locale to be offerd, in a Cookie or something) -> render app
User changes his language settings through the browser -> (store the locale to be offered, in a Cookie or something) -> render app
* State persistance
** resources
https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API
** Local && Session Storage
Setting local storage:
Window.localStorage.setting = "string"
Window.localStorage['setting'] = "string"
Window.localStorage.setItem('setting') = 'string'

Retreiving local storage:
Window.localStorage.setting
Window.localStorage['setting']
Window.localStorage.getItem('setting')

Window.localStorage value is a storage object
Window.sessionStorage value is a storage object
THeir difference is their expiration date. The localStorage storage object persists across even system reboots.
The sessionStorage object does not persist even across browser sessions.

Responding to storage changes with the StorageEvent:
the StorageEvent is fired whenever a change is made to the Storage object.


** Cookies
* Session implementation
* Mqtt
An mqtt client is a message delivery agent.

A responsible mqtt client *must* provide such facilities as to be able to bring
forth *accurate*, *definitive* and *up to date* information about the state of a
message.

** Questions
If an mqtt exchange operates in blocking and non-blocking mode (synchronous and
asynchronous) which facilities does npm/mqtt offer for selecting between the 2?

** Glossary
*** Payload
A payload is the client's data admitted for distribution. The term excludes the
data added by the broker.
*** Message
A message is comprised of the payload, the topic and any other information added
by the broker.
*** Topic
A topic is an address of channel.
*** Broker
A broker is relatively equivalent to a server in the mqtt universe.
It is responsible for:

Enabling publishers.
Admitting subscribers.
Making sure to forward messages to their registered channel.
*** Publisher
A client to the broker, who has submitted a payload for distribution to the
network.
*** Subscriber
A client to the broker, who has registered an interest in collecting published
payloads.




** My Client
this.server._subscibe -> asynchronous
this.server._publish -> asynchronous

* Color pallete
** purple
#+begin_src css
  /* BLACK */
  #000000

  /* WHITE */
  #ffffff

  /* PURPLE */
  #f3e5f5
  #e1bee7
  #ce93d8
  #ba68c8
  #ab47bc
  #9c27b0
  #8e24aa
  #7b1fa2
  #6a1b9a
  #4a148c
  #ea80fc
  #e040fb
  #d500f9
  #aa00ff


  #f2f0fc
  #cbc1ff
  #b2a3ff
  #a18fff
  #8476d1
  #6753ac
  #40199a
  #1f0066

  /* DEEP PURPLE */
  #ede7f6
  #d1c4e9
  #b39ddb
  #9575cd
  #7e57c2
  #673ab7
  #5e35b1
  #512da8
  #4527a0
  #311b92
  #b388ff
  #7c4dff
  #651fff
  #6200ea

  /* GREY */
  #FFF
  #f9f9f9
  #f0f0f0
  #e8e8e8
  #dfdfdf
  #d7d7d7
  #cecece
  #c6c6c6
  #bdbdbd
  #b4b4b4
  #acacac
  #a3a3a3
  #9b9b9b
  #939393
  #8a8a8a
  #828282
  #797979

  pearl bush: hsl(30, 25%, 91%)
  athens gray: hsl(240, 3%, 94%)
  white smoke: hsl(0, 0%, 93%)
  lynch: hsl(211, 12%, 48%)
  pumice: hsl(132, 6%, 83%)
  gallery: hsl(0, 0%, 93%)
  silver sand: hsl(204, 8%, 76%)
  porcelain: hsl(192, 15%, 94%)
  cascade: hsl(184, 9%, 62%)
  iron: hsl(197, 10%, 87%);
  edward: hsl(180, 8%, 69%);
  cararra: hsl(40, 10%, 94%);
  silver: hsl(0, 0, 75%)
  solitude: hsl(207, 20%, 91%)
  pampas: hsl(30, 14%, 95%);
  mystic: hsl(213, 24%, 93%)
  mercury: hsl(0, 0%, 91%)


REDS:
https://cssgradient.io/shades-of-red/
airbnb #fd5c63 // saturated, rugged, light
alabama crimson: #9e1b32 // bold, saturated, heavy
american rose: #FF033E // saturated, pastel, full, bright

#f6643d // tomatoe
GREENS:
https://cssgradient.io/shades-of-green/


  /* AF ADMIN */
  base: #d199ff
  shade: #c988ff
  shade: #c277ff
  shade: #ba66ff
  shade: #b255ff

  #9F34F7
  #793BAB
  #9F34F7
  #793BAB
  #793BAB
  #9F34F7

  /* 3 Main colors */
  /* 60% */ #d199FF hsl(273, 100%, 80%)
  /* 30% */ #FF92DE hsl(318, 100%, 79%)
  /* 30% */ #AEA0FF hsl(249, 100%, 81%)

  
#+end_src
** functional colors
The purpose of the color in terms of where it is to be used defines the name of the variable.

--primary-color: var(--some-color-10);
--primary-border-color: var(--green-color-10);
--primary-hover-color: var(--gren-color);
** Links color
primary
primary-hover
primary-active
primary-visited
text-font-color
** Buttons
primary
primary-hover
primary-active
primary-focus
primary-shadow
CTA -> call to action
border
shadow?

** splitting colors
fills
strokes
text


basic-strong
basic-medium
basic-base
basic-light
basic-subtle

contrast-strong
contrast-medium
contrast-base
contrast-light
contrast-subtle

accent-strong
accent-medium
accent-base
accent-light
accent-subtle

text-strong
text-medium
text-base
text-light
text-subtle

generic-strong
generic-medium
generic-base
generic-light
generic-subtle


 /* forms */
    --form-element-border: var(--color-border);
    --form-element-border-focus: var(--color-primary);
    --form-element-border-error: var(--color-error);
    --form-element-bg: var(--white);
    --form-text-placeholder: var(--gray-4);

    /* buttons */
    --btn-primary-bg: var(--color-primary);
    --btn-primary-hover: var(--color-primary-light);
    --btn-primary-active: var(--color-primary-dark);
    --btn-primary-label: var(--white);


    color-text: var(--gray-10);
    --color-text-heading: var(--black);
    --color-text-subtle: var(--gray-6);
    --color-link: var(--color-primary);
    --color-link-visited: var(--color-primary-dark);
    --color-mark: var(--color-accent-bg);
    --color-blockquote-border: var(--gray-2);

--maximeheckel-form-input-active': 'var(--maximeheckel-colors-brand)',
    '--maximeheckel-form-input-background': 'hsl(var(--palette-gray-00))',
    '--maximeheckel-form-input-disabled': 'hsl(var(--palette-gray-09))',
    '--maximeheckel-form-input-border': 'hsl(var(--palette-blue-10))',
    '--maximeheckel-form-input-focus': 'hsla(var(--palette-blue-40), 0.55

    --button-text-shadow-color: rgba(0, 0, 0, 0.15);
    --button-shadow-color: rgba(0, 0, 0, 0.2);
    --button-primary-color: var(--blumine-color);
    --button-success-color: var(--emerald-color);
    --button-primary-hov-color: var(--bali-hai-color);
    --button-success-hov-color: var(--algae-green-color);
    --button-hover-color: var(--jelly-bean-color);
    --coin-button-border-color: var(--calypso-color);
    --coin-button-bg-color: var(--dark-blumine-color);
    --coin-button-shadow-color: var(--transparent-geyser-color);

    --option-link-color: var(--tower-gray-color);
    --option-link-hov-color: var(--hit-gray-color);
    --option-link-border-color: var(--geyser-color);
    --option-link-bg-color: var(--mystic-color);
    --option-link-hov-bg-color: var(--darker-mystic-color);


    --link-color: var(--bali-hai-color);
    --navigation-bg-color: var(--blumine-color);
    --active-item-color: var(--scooter-color);
    --hover-icon-color: var(--emerald-color);

 --error-text-color: var(--sunglo-color);
    --error-border-light-color: var(--azalea-color);
    --error-border-dark-color: var(--mandys-pink-color);

     --serif-fonts: Lora,'Times New Roman', serif;
    --sans-serif-fonts: Montserrat, Helvetica, sans-serif;

    --welcome-head-text: 1.75em;
    --welcome-text: 1.125em;
    --head-1-text: 3.5rem;
    --head-2-text: 1.5rem;
    --head-3-text: 1.2rem;
    --date-text: 1.75rem;
    --normal-text: 0.875rem;

* hand bracelent
** My hand bracelet
*** cls-6 ( the bracelet ornament )
cls-6 -> the bracelet ornament
fill: var(--primary-medium);

*** cls-5 ( the bracelet wristband )

*** cls-2 ( the big background circle)
light-mode.bracelet-idle .cls-2
fill: #cacbcc;

*** cls-4 ( the hand outline )
*** cls-3 ( the hand shadow )
*** cls-1 (generic wrapper ) 
